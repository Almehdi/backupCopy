#!/bin/bash

####################################################################################
#|										  |#
#|	This script is free software; you can redistribute it and/or modify	  |#
#|	it under the terms of the GNU General Public License as published by	  |#
#|	the Free Software Foundation; either version 2 of the License, or	  |#
#|	(at your option) any later version.					  |#
#|										  |#
#|	Report bugs or suggestions to my profile on G+ (http://goo.gl/MjpTZ) 	  |#
#|										  |#
#|	Copyright (C) 2013 Daniel Sandman (revoltism _at_ gmail.com)		  |#
#|										  |#
#|________________________________________________________________________________|#
####################################################################################


## Edit your Copy.com user credentials here.
cp_pass=""
cp_user=""

## Adding the password in plane text is discurraged. Preferrable use a password handler like Pass.
## How to use Pass is explained here http://goo.gl/XLbFK.

########################### Don't touch the below code ##############################

if [ "$cp_pass" = "" -o "$cp_user" = "" ]; then
	echo "The username or password has not been set. Edit script and enter your credentials."
	exit 1
fi

CopyCmd="CopyCmd Cloud -password=$cp_pass -username=$cp_user"

## Select the local dir to backup and then destination dir on Copy.
dialog --title "Info" --msgbox "To select which directory to backup use the arrow keys\nwhen navigating. Then hit space key to select and return\nkey to confirm.\n\nYou can also enter the path to the directory directly." 10 60
locl_dir=$(dialog --stdout --title "Local directory to backup" --dselect $HOME 20 60)
dest_dir=$(dialog --stdout --title "Destination on Copy" --inputbox "\nEnter the destination directory on Copy.com for\nwhich you want to backup to.\n\n" 20 60)
clear

## Abort if dest_dir is empty.
if [ "$dest_dir" = "" ]; then
	echo "Empty destination. Aborted!"
	exit 1
fi

## Make sure the destination dir format is a valid directory.
if ! echo $dest_dir | grep -G "^/"; then
	dest_dir="/$dest_dir"
fi

## Make sure the local dir format is a valid directory.
if ! echo $locl_dir | grep -G "/$"; then
	locl_dir="$locl_dir/"
fi

bckup_file="$(basename $locl_dir)-$(date +%Y%m%d).tar.xz"

## Use sudo depending on which user the directory belongs too.
if [ "test -O $locl_dir" = "0" ]; then
	## Compress the chosen directory.
	dialog --infobox "Making a tar.xz archive of the chosen directory (it might take a while)..." 6 65 ; sleep 5
	XZ_OPT=-9 tar cJf $bckup_file $locl_dir &> /dev/null
else
	## Compress the chosen directory as root.
	dialog --infobox "Making a tar.xz archive of the chosen directory (it might take a while)..." 6 65 ; sleep 5
	sudo su -c "XZ_OPT=-9 tar cJf $bckup_file $locl_dir &> /dev/null"
fi

## Whether to send the file to Copy.com or not.
dialog --title "Send files to Copy.com?" --yesno "Do you wish to send '$(pwd)/$bckup_file' ($(du -h $bckup_file|cut -f1))\nto Copy.com?" 8 65

if [ "$?" = "0" ]; then
	## Check if destination dir exist. If not, create it.
	if $CopyCmd ls $dest_dir|grep -G 'Error'; then
		${CopyCmd} mkdir $dest_dir
		dialog --infobox "The destination directory did not exist on Copy. Created it." 6 65 ; sleep 5
	fi
	$CopyCmd put -r $bckup_file $dest_dir &> /dev/null
fi

## Whether to delete the local file or not.
dialog --title "Discard the archived directory?" --yesno "Do you wish to delete the archived file from the local\ncomputer?\n\n$(pwd)/$bckup_file" 10 65

if [ "$?" = "0" ]; then
	if [ "test -O $bckup_file" = "0" ]; then
		rm $(pwd)/$bckup_file
	else
		sudo su -c "rm $(pwd)/$bckup_file"
	fi
fi
clear
