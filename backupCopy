#!/bin/bash

####################################################################################
#|										  |#
#|	This script is free software; you can redistribute it and/or modify	  |#
#|	it under the terms of the GNU General Public License as published by	  |#
#|	the Free Software Foundation; either version 2 of the License, or	  |#
#|	(at your option) any later version.					  |#
#|										  |#
#|	Report bugs or suggestions to my profile on G+ (http://goo.gl/MjpTZ) 	  |#
#|										  |#
#|	Copyright (C) 2013 Daniel Sandman (revoltism _at_ gmail.com)		  |#
#|										  |#
#|________________________________________________________________________________|#
####################################################################################


## Edit your Copy.com user credentials here.
cp_pass=""
cp_user=""

## Adding the password in plane text is discurraged. Preferrable use a password handler like Pass.
## How to use Pass is explained here http://goo.gl/XLbFK.

########################### Don't touch the below code ##############################

## Make some checks the script needs to run.
if [ "$(which {gpg,dialog} &> /dev/null;echo $?)" = "1" ]; then
	echo "Missing a dependency to run the script. Make sure to have 'gpg' and 'dialog' installed."
	exit 1
elif [ "$cp_pass" = "" -o "$cp_user" = "" ]; then
	echo "The username or password has not been set. Edit script and enter your credentials."
	exit 1
fi

CopyCmd="CopyCmd Cloud -password=$cp_pass -username=$cp_user"

## Select the local dir to backup and then destination dir on Copy.
dialog --title "Info" --msgbox "To select which directory to backup use the arrow keys\nwhen navigating. Then hit space key to select and return\nkey to confirm.\n\nYou can also enter the path to the directory directly." 10 60
locl_dir=$(dialog --stdout --title "Local directory to backup" --dselect $HOME 20 60); [ "$(echo $?)" = "1" ] && exit 1
dest_dir=$(dialog --stdout --title "Destination on Copy" --inputbox "\nEnter the destination directory on Copy.com for which you want\nto backup to.\n\n" 12 70); [ "$(echo $?)" = "1" ] && exit 1
clear

## Abort if dest_dir is empty.
if [ "$dest_dir" = "" ]; then
	echo "Empty destination. Aborted!"
	exit 1
fi

## Make sure the destination dir format is a valid directory.
if ! echo $dest_dir | grep -G "^/"; then
	dest_dir="/$dest_dir"
fi

## Make sure the local dir format is a valid directory.
if ! echo $locl_dir | grep -G "/$"; then
	locl_dir="$locl_dir/"
fi

## Let's make a informative filename and a less cluttered code. 
bckup_file="$(basename $locl_dir)-$(date +%Y%m%d)_gpg-encrypted.tar.xz"
keep_file="$(basename $locl_dir)-$(date +%Y%m%d-%H%M%S)_gpg-encrypted.tar.xz"

## Check if a file with the same name already exist. If it does ask what to do.
if [ -e "$bckup_file" ]; then
	dialog --title "Overwrite file?" --yesno "The file '$bckup_file' already exist. A 'yes' will overwrite and a 'no' will renamed it to\n\n'$keep_file'." 10 75
	if [ "$?" = "0" ]; then
        	if [ "test -O $bckup_file" = "0" ]; then
                	rm $(pwd)/$bckup_file
        	else
                	sudo su -c "rm $(pwd)/$bckup_file"
        	fi
	else
		if [ "test -O $bckup_file" = "0" ]; then
			mv $bckup_file $keep_file
		else
			sudo mv $bckup_file $keep_file
		fi
	fi
fi

        function progress(){
        echo -n "Please wait..."
        while true
        do
                echo -n "."
                sleep 1
        done
        }

## Use sudo depending on which user the directory belongs too.
if [ "test -O $locl_dir" = "0" ]; then
	## Compress the chosen directory.
	dialog --infobox "Making a tar.xz archive of the chosen directory '$locl_dir'\n\n(it might take a while)..." 8 80 ; sleep 5

	progress &
	MYSELF=$!
	XZ_OPT=-9 tar cJf $bckup_file $locl_dir &>/dev/null
	kill $MYSELF &>/dev/null
	echo -n ".done."
	echo
else
        ## Compress the chosen directory.
        dialog --infobox "Making a tar.xz archive of the chosen directory '$locl_dir'\n\n(it might take a while)..." 8 80 ; sleep 5

	progress &
        MYSELF=$!
	sudo su -c "XZ_OPT=-9 tar cJf $bckup_file $locl_dir &> /dev/null"
        kill $MYSELF &>/dev/null
        echo -n ".done."
        sleep 2
fi

## Encrypt the file.
dialog --title "Encrypt file with GPG" --msgbox "The file shall now be encrypted as it will be sent to Copy.com through simple http which should not be regarded as safe... Enter a password and make sure to remember it." 10 75
gpg -c $bckup_file
rm -f $bckup_file
mv $bckup_file.gpg $bckup_file

## Whether to send the file to Copy.com or not.
dialog --title "Send files to Copy.com?" --yesno "Do you wish to send '$(pwd)/$bckup_file' ($(du -h $bckup_file|cut -f1)) to Copy.com?" 8 80

if [ "$?" = "0" ]; then
	## Check if destination dir exist. If not, create it.
	if $CopyCmd ls $dest_dir|grep -G 'Error'; then
		$CopyCmd mkdir $dest_dir
		dialog --infobox "The destination directory did not exist on Copy.com. Created it." 3 75 ; sleep 5
	fi

        progress &
        MYSELF=$!
	$CopyCmd put -r $bckup_file $dest_dir &> /dev/null
        kill $MYSELF &>/dev/null
        echo -n ".done."
        echo
fi

## Whether to delete the local file or not.
dialog --title "Delete the file?" --yesno "Do you wish to delete the below file from the local computer?\nThe file sent to Copy.com will not be deleted.\n\n$(pwd)/$bckup_file" 10 75

if [ "$?" = "0" ]; then
	if [ "test -O $bckup_file" = "0" ]; then
		rm $(pwd)/$bckup_file
	else
		sudo su -c "rm $(pwd)/$bckup_file"
	fi
fi
clear
